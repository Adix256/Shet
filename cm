#!/bin/bash

# Get absolute path to project root (parent of directory where script is run)
PROJECT_ROOT=$(dirname "$(pwd)")
PROJECT_NAME=$(basename "$PROJECT_ROOT")
SRC_DIR="$(pwd)"

# Verify we're in a potential source directory
if [ ! -f "$(basename "$SRC_DIR")"/*.{c,h} ]; then
    echo "Warning: No .c/.h files found in current directory" >&2
fi

# Create CMakeLists.txt in project root
CMAKE_FILE="$PROJECT_ROOT/CMakeLists.txt"

# Generate CMakeLists.txt with absolute paths
cat > "$CMAKE_FILE" <<EOF
cmake_minimum_required(VERSION 3.10)
project($PROJECT_NAME)

# Set source files using absolute paths
file(GLOB SRCS 
    "$SRC_DIR/*.c"
    "$SRC_DIR/*.h"
)

# Handle case when no source files are found
if(NOT SRCS)
    message(FATAL_ERROR "No source files found in $SRC_DIR")
endif()

add_executable($PROJECT_NAME \${SRCS})

# Help CMake find headers if needed
target_include_directories($PROJECT_NAME PRIVATE "$SRC_DIR")
EOF

# Create build directory
BUILD_DIR="$PROJECT_ROOT/build"
mkdir -p "$BUILD_DIR"

# Run CMake with explicit path to source
cd "$BUILD_DIR" && cmake -G Ninja "$PROJECT_ROOT"

echo "Build system generated in: $BUILD_DIR"
echo "To build: cd '$BUILD_DIR' && ninja"
